---
title: "LAT coordinate to county"
format: pdf
out: pdf
editor: visual
---

## Step 1: Loading packages

```{r}
library(sf)
library(tigris)
library(dplyr)
library(ggplot2)
```

## Step 2: Read the dataset

```{r}
data <- read.csv("/Users/fazazhar/Downloads/labor_action_tracker_with_lat_long.csv")
```

## Step 3: Prepare the county data

```{r}
options(tigris_use_cache = TRUE)
counties <- counties(class = "sf")
```

## Step 4: Convert latitude and longitude to spatial points

```{r}
data_sf <- st_as_sf(data, coords = c("Longitude", "Latitude"), crs = 4326)

# If they are not the same, reproject one of them. For example, if you need to reproject the counties to match your data:
counties_transformed <- st_transform(counties, st_crs(data_sf))

```

## Step 5: Spatial join - match points to nearest U.S. county

```{r}
data_with_county <- st_join(data_sf, counties_transformed, join = st_within)

# Optionally, if some points might fall outside of county boundaries (e.g., due to data precision),
# you can use `st_nearest_feature` to assign them to the nearest county instead.
```

## Step 6 (Optional): Map the data

```{r}
ggplot() +
  geom_sf(data = counties, fill = "white", color = "gray") +
  geom_sf(data = data_with_county, color = "red", size = 2) +
  theme_minimal()

```

## Step 7: First 10 LAT event coordinates and counties

```{r}
head(data_with_county[c('geometry', 'NAMELSAD')], 10)

```
